name: Build and Push echo-server Docker Image

on:
  push:
    branches: [ "main" ]
    paths:
      - 'echo-server/**'
      - '.github/workflows/echo-server-docker.yml'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  docker:
    name: Build and Push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: ./echo-server
          file: ./echo-server/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          no-cache: true
          provenance: false
          tags: |
            ikupczynski/echo-server:latest
            ikupczynski/echo-server:${{ github.sha }}

      - name: Verify amd64 binary architecture
        run: |
          set -eux
          ref="docker.io/ikupczynski/echo-server:${{ github.sha }}"
          amd64_digest=$(docker buildx imagetools inspect "$ref" | awk '/Platform: linux\/amd64/ {getline; print $2; exit}')
          docker create --platform=linux/amd64 --name echo-amd "$ref@${amd64_digest}" >/dev/null
          docker cp echo-amd:/usr/local/bin/echo-server ./echo-server-amd64
          file ./echo-server-amd64 | grep -E 'x86-64|x86-64 \(GNU/Linux\)'

      - name: Verify arm64 binary architecture
        run: |
          set -eux
          ref="docker.io/ikupczynski/echo-server:${{ github.sha }}"
          arm64_digest=$(docker buildx imagetools inspect "$ref" | awk '/Platform: linux\/arm64/ {getline; print $2; exit}')
          docker create --platform=linux/arm64 --name echo-arm "$ref@${arm64_digest}" >/dev/null
          docker cp echo-arm:/usr/local/bin/echo-server ./echo-server-arm64
          file ./echo-server-arm64 | grep -E 'ARM aarch64|ARM64'
          docker rm -f echo-amd echo-arm >/dev/null || true

